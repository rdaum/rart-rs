var searchIndex = new Map(JSON.parse('[["rart",{"t":"EEEREKENMNMNMMCMCCCMNMCCFNNNNNNNNNKTRCMMMMMMMMCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKCMNNNMMMMMMMMNMCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFFKNNNNNNONNNNMNNOOOOOOOONNNNNNOFNNNNNNNNNNNNNNNNN","n":["AdaptiveRadixTree","ArrayKey","KeyTrait","NodeType","Partial","TreeTrait","VectorKey","get","get_k","get_mut","get_mut_k","insert","insert_k","is_empty","iter","","keys","partials","range","","remove","remove_k","stats","tree","Iter","borrow","borrow_mut","from","into","into_iter","next","try_from","try_into","type_id","KeyTrait","MAXIMUM_SIZE","PartialType","array_key","at","extend_from_partial","length_at","matches_slice","new_from_partial","new_from_slice","to_partial","truncate","vector_key","ArrayKey","as_array","as_ref","as_slice","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","eq","extend_from_partial","fmt","from","","","","","","","","","","","","","","","","","","","","","","","","","","","into","length_at","matches_slice","new_from_array","new_from_partial","new_from_slice","new_from_str","new_from_string","partial_cmp","to_be_u64","to_owned","to_partial","truncate","try_from","try_into","type_id","VectorKey","as_ref","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","eq","extend_from_partial","from","","","","","","","","","","","","","","","","","","","","","","","","","","","into","length_at","matches_slice","new_from_partial","new_from_slice","new_from_str","new_from_string","new_from_vec","partial_cmp","to_be_u64","to_owned","to_partial","truncate","try_from","try_into","type_id","Partial","array_partial","at","ends_with","is_empty","iter","len","partial_after","partial_before","partial_extended_with","partial_from","prefix_length_common","prefix_length_key","prefix_length_slice","starts_with","to_slice","vector_partial","ArrPartial","as_ref","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","","","from_slice","index","into","into_iter","key","len","partial_after","partial_before","partial_extended_with","partial_from","prefix_length_common","prefix_length_key","prefix_length_slice","to_owned","to_slice","","try_from","try_into","type_id","VectorPartial","as_ref","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","","","from_slice","into","key","len","partial_after","partial_before","partial_extended_with","partial_from","prefix_length_common","prefix_length_key","prefix_length_slice","to_owned","to_slice","","try_from","try_into","type_id","Range","borrow","borrow_mut","empty","for_iter","for_iter_with_bounds","for_iter_with_first","from","into","into_iter","next","try_from","try_into","type_id","NodeStats","TreeStats","TreeStatsTrait","borrow","","borrow_mut","","default","","density","fmt","","from","","get_tree_stats","into","","max_height","node_stats","num_inner_nodes","num_leaves","num_values","total_children","total_density","total_nodes","try_from","","try_into","","type_id","","width","AdaptiveRadixTree","borrow","borrow_mut","default","from","get_k","get_mut_k","get_tree_stats","insert_k","into","is_empty","iter","new","range","remove_k","try_from","try_into","type_id"],"q":[[0,"rart"],[24,"rart::iter"],[34,"rart::keys"],[47,"rart::keys::array_key"],[104,"rart::keys::vector_key"],[158,"rart::partials"],[175,"rart::partials::array_partial"],[207,"rart::partials::vector_partial"],[237,"rart::range"],[251,"rart::stats"],[283,"rart::tree"],[301,"core::option"],[302,"core::convert"],[303,"core::ops::range"],[304,"core::result"],[305,"core::any"],[306,"core::clone"],[307,"core::cmp"],[308,"core::fmt"],[309,"alloc::string"],[310,"alloc::vec"],[311,"core::slice::iter"],[312,"std::collections::hash::map"]],"i":"```d```0000000`0```000```Ab00000000`j0`00000000``Bl0000000000000000000000000000000000000000000000000000000`Eb0000000000000000000000000000000000000000000000000000``Ah0000000000000``E`000000000000000000000000000000`Ef0000000000000000000000000000`Ad000000000000```EnF`101011010Fd21111112122121212`Fh0000000000000000","f":"```````{{{f{{d{}{{b{c}}}}}}g}{{h{{f{i}}}}}{}j{{l{e}}}{}}{{{f{{d{}{{b{c}}}}}}{f{e}}}{{h{{f{g}}}}}{}j{}}{{{f{n{d{}{{b{c}}}}}}g}{{h{{f{ni}}}}}{}j{{l{e}}}{}}{{{f{n{d{}{{b{c}}}}}}{f{e}}}{{h{{f{ng}}}}}{}j{}}{{{f{n{d{}{{b{c}}}}}}gi}{{h{i}}}{}j{{l{e}}}{}}{{{f{n{d{}{{b{c}}}}}}{f{e}}g}{{h{g}}}{}j{}}{{{f{{d{}{{b{c}}}}}}}A`{}}`{{{f{{d{}{{b{c}}}}}}}{{Ab{eg}}}{}j{}}```{{{f{{d{}{{b{c}}}}}}g}{{Ad{ei}}}{}j{{Af{e}}}{}}{{{f{n{d{}{{b{c}}}}}}g}{{h{i}}}{}j{{l{e}}}{}}{{{f{n{d{}{{b{c}}}}}}{f{e}}}{{h{g}}}{}j{}}```{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{cc{}}{{}c{}}{{}c{}}{{{f{n{Ab{ecg}}}}}{{h{i}}}Ah{{j{}{{Aj{c}}}}}{}{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}````{{{f{{j{}{{Aj{c}}}}}}B`}Bb{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}{f{c}}}{{j{}{{Aj{c}}}}}{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}B`}B`{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}{f{{Bj{Bb}}}}}A`{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{c}}}{{j{}{{Aj{c}}}}}{AhBdBfBh}}{{{f{{Bj{Bb}}}}}{{j{}{{Aj{c}}}}}{AhBdBfBh}}{{{f{{j{}{{Aj{c}}}}}}B`}c{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}B`}{{j{}{{Aj{c}}}}}{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}``{{{f{Bl}}}{{f{{Bn{Bb}}}}}}{{{f{Bl}}}{{f{{Bj{Bb}}}}}}0{{{f{Bl}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{Bl}}}Bl}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{Bl}}{f{Bl}}}Cb}{{{f{Bl}}{f{Bl}}}A`}{{{f{Bl}}{f{c}}}Bl{}}{{{f{Bl}}{f{nCd}}}Cf}{ChBl}{{{f{B`}}}Bl}{CjBl}{{{f{Cl}}}Bl}{ClBl}{{{f{Cn}}}Bl}{{{f{Cj}}}Bl}{CnBl}{{{f{Ch}}}Bl}{{{f{D`}}}Bl}{D`Bl}{{{f{Db}}}Bl}{cc{}}{DbBl}{{{f{Dd}}}Bl}{DfBl}{{{f{Dh}}}Bl}{BbBl}{{{f{Bb}}}Bl}{DjBl}{{{f{Dj}}}Bl}{DhBl}{{{f{Dl}}}Bl}{DnBl}{{{f{Dn}}}Bl}{B`Bl}{DlBl}{{}c{}}{{{f{Bl}}B`}B`}{{{f{Bl}}{f{{Bj{Bb}}}}}A`}{{{Bn{Bb}}}Bl}{{{f{c}}}Bl{}}{{{f{{Bj{Bb}}}}}Bl}{{{f{Dd}}}Bl}{{{f{Cj}}}Bl}{{{f{Bl}}{f{Bl}}}{{h{Cb}}}}{{{f{Bl}}}Dn}{fc{}}{{{f{Bl}}B`}E`}{{{f{Bl}}B`}Bl}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{{{f{Eb}}}{{f{{Bj{Bb}}}}}}{{{f{Eb}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{Eb}}}Eb}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{Eb}}{f{Eb}}}Cb}{{{f{Eb}}{f{Eb}}}A`}{{{f{Eb}}{f{c}}}Eb{}}{{{f{Bb}}}Eb}{{{f{Ch}}}Eb}{D`Eb}{cc{}}{{{f{D`}}}Eb}{CjEb}{{{f{Cj}}}Eb}{{{f{Dd}}}Eb}{{{f{B`}}}Eb}{BbEb}{DhEb}{DjEb}{{{f{Dj}}}Eb}{{{f{Db}}}Eb}{ChEb}{{{f{Dh}}}Eb}{DfEb}{DbEb}{{{f{Dl}}}Eb}{DnEb}{{{f{Dn}}}Eb}{B`Eb}{{{f{Cl}}}Eb}{ClEb}{{{f{Cn}}}Eb}{CnEb}{DlEb}{{}c{}}{{{f{Eb}}B`}B`}{{{f{Eb}}{f{{Bj{Bb}}}}}A`}{{{f{c}}}Eb{}}{{{f{{Bj{Bb}}}}}Eb}{{{f{Dd}}}Eb}{{{f{Cj}}}Eb}{{{Ed{Bb}}}Eb}{{{f{Eb}}{f{Eb}}}{{h{Cb}}}}{{{f{Eb}}}Dn}{fc{}}{{{f{Eb}}B`}Ef}{{{f{Eb}}B`}Eb}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}``{{{f{Ah}}B`}Bb}{{{f{Ah}}{f{{Bj{Bb}}}}}A`}{{{f{Ah}}}A`}{{{f{Ah}}}{{Eh{Bb}}}}{{{f{Ah}}}B`}{{{f{Ah}}B`}Ah}0{{{f{Ah}}{f{Ah}}}Ah}{{{f{Ah}}B`B`}Ah}{{{f{Ah}}{f{Ah}}}B`}{{{f{Ah}}{f{c}}B`}B`{{j{}{{Aj{Ah}}}}}}{{{f{Ah}}{f{{Bj{Bb}}}}}B`}9{{{f{Ah}}}{{f{{Bj{Bb}}}}}}``{{{f{E`}}}{{f{{Bj{Bb}}}}}}{{{f{E`}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{E`}}}E`}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{E`}}{f{E`}}}A`}{{{f{E`}}{f{nCd}}}Cf}{{{f{{Bj{Bb}}}}}E`}{BlE`}{cc{}}2{{{f{E`}}B`}{{f{c}}}{}}{{}c{}}{{{f{E`}}}c{}}5{{{f{E`}}}B`}{{{f{E`}}B`}E`}0{{{f{E`}}{f{E`}}}E`}{{{f{E`}}B`B`}E`}{{{f{E`}}{f{E`}}}B`}{{{f{E`}}{f{c}}B`}B`{{j{}{{Aj{E`}}}}}}{{{f{E`}}{f{{Bj{Bb}}}}}B`}{fc{}}{{{f{E`}}}{{f{{Bj{Bb}}}}}}0{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{{{f{Ef}}}{{f{{Bj{Bb}}}}}}{{{f{Ef}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{Ef}}}Ef}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{Ef}}{f{Ef}}}A`}{{{f{Ef}}{f{nCd}}}Cf}{{{f{{Bj{Bb}}}}}Ef}{cc{}}{EbEf}2{{}c{}}3{{{f{Ef}}}B`}{{{f{Ef}}B`}Ef}0{{{f{Ef}}{f{Ef}}}Ef}{{{f{Ef}}B`B`}Ef}{{{f{Ef}}{f{Ef}}}B`}{{{f{Ef}}{f{c}}B`}B`{{j{}{{Aj{Ef}}}}}}{{{f{Ef}}{f{{Bj{Bb}}}}}B`}{fc{}}{{{f{Ef}}}{{f{{Bj{Bb}}}}}}0{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{}{{Ad{ce}}}j{}}{{{Ab{ce}}{Ej{c}}}{{Ad{ce}}}j{}}{{{Ab{ce}}{Ej{c}}{Ej{c}}}{{Ad{ce}}}j{}}{{{El{c{f{e}}}}{Ab{ce}}{Ej{c}}}{{Ad{ce}}}j{}}{cc{}}{{}c{}}{{}c{}}{{{f{n{Ad{eg}}}}}{{h{{El{e{f{g}}}}}}}Ah{{j{}{{Aj{c}}}}}{}}<;:```9988{{}En}{{}F`}{EnFb}{{{f{En}}{f{nCd}}}Cf}{{{f{F`}}{f{nCd}}}Cf}88{{{f{Fd}}}F`}88{F`B`}{F`Ff}111{EnB`}{F`Fb}1{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fAn}04`{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{}{{Fh{ce}}}j{}}{cc{}}{{{f{{Fh{ce}}}}{f{c}}}{{h{{f{e}}}}}j{}}{{{f{n{Fh{ce}}}}{f{c}}}{{h{{f{ne}}}}}j{}}{{{f{{Fh{ce}}}}}F`j{}}{{{f{n{Fh{ce}}}}{f{c}}e}{{h{e}}}j{}}{{}c{}}{{{f{{Fh{ce}}}}}A`j{}}{{{f{{Fh{ce}}}}}{{Ab{ce}}}j{}}8{{{f{{Fh{ce}}}}g}{{Ad{ce}}}j{}{{Af{c}}}}{{{f{n{Fh{ce}}}}{f{c}}}{{h{e}}}j{}}?>=","D":"Dd","p":[[17,"NodeType"],[10,"TreeTrait",0],[1,"reference",null,null,1],[6,"Option",301,null,1],[10,"KeyTrait",34],[10,"Into",302,null,1],[0,"mut"],[1,"bool"],[5,"Iter",24],[5,"Range",237],[10,"RangeBounds",303],[10,"Partial",158],[17,"PartialType"],[6,"Result",304,null,1],[5,"TypeId",305],[1,"usize"],[1,"u8"],[10,"From",302,null,1],[10,"Clone",306],[10,"PartialEq",307],[1,"slice"],[5,"ArrayKey",47],[1,"array"],[1,"unit"],[6,"Ordering",307],[5,"Formatter",308],[8,"Result",308],[1,"i64"],[5,"String",309],[1,"isize"],[1,"i128"],[1,"i32"],[1,"i16"],[1,"str"],[1,"i8"],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[5,"ArrPartial",175],[5,"VectorKey",104],[5,"Vec",310],[5,"VectorPartial",207],[5,"Iter",311],[6,"Bound",303],[1,"tuple",null,null,1],[5,"NodeStats",251],[5,"TreeStats",251],[1,"f64"],[10,"TreeStatsTrait",251],[5,"HashMap",312],[5,"AdaptiveRadixTree",283]],"r":[[0,283],[1,47],[2,34],[4,158],[6,104]],"b":[[61,"impl-From%3Ci64%3E-for-ArrayKey%3CN%3E"],[62,"impl-From%3C%26usize%3E-for-ArrayKey%3CN%3E"],[63,"impl-From%3CString%3E-for-ArrayKey%3CN%3E"],[64,"impl-From%3C%26isize%3E-for-ArrayKey%3CN%3E"],[65,"impl-From%3Cisize%3E-for-ArrayKey%3CN%3E"],[66,"impl-From%3C%26i128%3E-for-ArrayKey%3CN%3E"],[67,"impl-From%3C%26String%3E-for-ArrayKey%3CN%3E"],[68,"impl-From%3Ci128%3E-for-ArrayKey%3CN%3E"],[69,"impl-From%3C%26i64%3E-for-ArrayKey%3CN%3E"],[70,"impl-From%3C%26i32%3E-for-ArrayKey%3CN%3E"],[71,"impl-From%3Ci32%3E-for-ArrayKey%3CN%3E"],[72,"impl-From%3C%26i16%3E-for-ArrayKey%3CN%3E"],[74,"impl-From%3Ci16%3E-for-ArrayKey%3CN%3E"],[75,"impl-From%3C%26str%3E-for-ArrayKey%3CN%3E"],[76,"impl-From%3Ci8%3E-for-ArrayKey%3CN%3E"],[77,"impl-From%3C%26u128%3E-for-ArrayKey%3CN%3E"],[78,"impl-From%3Cu8%3E-for-ArrayKey%3CN%3E"],[79,"impl-From%3C%26u8%3E-for-ArrayKey%3CN%3E"],[80,"impl-From%3Cu16%3E-for-ArrayKey%3CN%3E"],[81,"impl-From%3C%26u16%3E-for-ArrayKey%3CN%3E"],[82,"impl-From%3Cu128%3E-for-ArrayKey%3CN%3E"],[83,"impl-From%3C%26u32%3E-for-ArrayKey%3CN%3E"],[84,"impl-From%3Cu64%3E-for-ArrayKey%3CN%3E"],[85,"impl-From%3C%26u64%3E-for-ArrayKey%3CN%3E"],[86,"impl-From%3Cusize%3E-for-ArrayKey%3CN%3E"],[87,"impl-From%3Cu32%3E-for-ArrayKey%3CN%3E"],[115,"impl-From%3C%26u8%3E-for-VectorKey"],[116,"impl-From%3C%26i64%3E-for-VectorKey"],[117,"impl-From%3Ci32%3E-for-VectorKey"],[119,"impl-From%3C%26i32%3E-for-VectorKey"],[120,"impl-From%3CString%3E-for-VectorKey"],[121,"impl-From%3C%26String%3E-for-VectorKey"],[122,"impl-From%3C%26str%3E-for-VectorKey"],[123,"impl-From%3C%26usize%3E-for-VectorKey"],[124,"impl-From%3Cu8%3E-for-VectorKey"],[125,"impl-From%3Cu128%3E-for-VectorKey"],[126,"impl-From%3Cu16%3E-for-VectorKey"],[127,"impl-From%3C%26u16%3E-for-VectorKey"],[128,"impl-From%3C%26i16%3E-for-VectorKey"],[129,"impl-From%3Ci64%3E-for-VectorKey"],[130,"impl-From%3C%26u128%3E-for-VectorKey"],[131,"impl-From%3Ci8%3E-for-VectorKey"],[132,"impl-From%3Ci16%3E-for-VectorKey"],[133,"impl-From%3C%26u32%3E-for-VectorKey"],[134,"impl-From%3Cu64%3E-for-VectorKey"],[135,"impl-From%3C%26u64%3E-for-VectorKey"],[136,"impl-From%3Cusize%3E-for-VectorKey"],[137,"impl-From%3C%26isize%3E-for-VectorKey"],[138,"impl-From%3Cisize%3E-for-VectorKey"],[139,"impl-From%3C%26i128%3E-for-VectorKey"],[140,"impl-From%3Ci128%3E-for-VectorKey"],[141,"impl-From%3Cu32%3E-for-VectorKey"],[185,"impl-From%3C%26%5Bu8%5D%3E-for-ArrPartial%3CSIZE%3E"],[186,"impl-From%3CArrayKey%3CSIZE%3E%3E-for-ArrPartial%3CSIZE%3E"],[202,"impl-ArrPartial%3CSIZE%3E"],[203,"impl-Partial-for-ArrPartial%3CSIZE%3E"],[217,"impl-From%3C%26%5Bu8%5D%3E-for-VectorPartial"],[219,"impl-From%3CVectorKey%3E-for-VectorPartial"],[232,"impl-Partial-for-VectorPartial"],[233,"impl-VectorPartial"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsBEQABABoAHgArAEsADQBaAAcAYwATAHgAFgCQABAArwAMAL0AAQDAABoA3AABAN8AFQD3ABAACgEAAA0BEgAhAQMAJgEHAA==","P":[[7,"TreeTrait::NodeType,KeyType,Key,ValueType"],[8,"TreeTrait::NodeType,KeyType,ValueType"],[9,"TreeTrait::NodeType,KeyType,Key,ValueType"],[10,"TreeTrait::NodeType,KeyType,ValueType"],[11,"TreeTrait::NodeType,KeyType,KV,ValueType"],[12,"TreeTrait::NodeType,KeyType,ValueType"],[13,"TreeTrait::NodeType"],[15,"TreeTrait::NodeType,KeyType,ValueType"],[19,"TreeTrait::NodeType,KeyType,R,ValueType"],[20,"TreeTrait::NodeType,KeyType,KV,ValueType"],[21,"TreeTrait::NodeType,KeyType,ValueType"],[25,"T"],[28,"U"],[29,"I"],[30,"P,K,V,Iterator::Item"],[31,"U,T"],[32,"U"],[33,""],[38,"KeyTrait::PartialType"],[48,""],[52,"T"],[54,""],[55,"T"],[56,""],[59,"KeyTrait::PartialType"],[60,""],[73,"T"],[74,""],[88,"U"],[89,""],[92,"KeyTrait::PartialType"],[93,""],[98,"T"],[99,""],[101,"U,T"],[102,"U"],[103,""],[107,"T"],[109,""],[110,"T"],[111,""],[114,"KeyTrait::PartialType"],[115,""],[118,"T"],[119,""],[142,"U"],[143,""],[145,"KeyTrait::PartialType"],[146,""],[152,"T"],[153,""],[155,"U,T"],[156,"U"],[157,""],[170,"K"],[171,""],[178,"T"],[180,""],[181,"T"],[182,""],[187,"T"],[188,""],[189,"Index::Output"],[190,"U"],[191,"IntoIterator::IntoIter"],[192,""],[199,"K"],[200,""],[201,"T"],[202,""],[204,"U,T"],[205,"U"],[206,""],[210,"T"],[212,""],[213,"T"],[214,""],[218,"T"],[219,""],[221,"U"],[222,""],[229,"K"],[230,""],[231,"T"],[232,""],[234,"U,T"],[235,"U"],[236,""],[238,"T"],[240,"K,V"],[244,"T"],[245,"U"],[246,"I"],[247,"P,K,V"],[248,"U,T"],[249,"U"],[250,""],[254,"T"],[258,""],[263,"T"],[265,""],[266,"U"],[268,""],[276,"U,T"],[278,"U"],[280,""],[284,"T"],[286,"KeyType,ValueType"],[287,"T"],[288,"KeyType,ValueType"],[292,"U"],[293,"KeyType,ValueType"],[296,"KeyType,ValueType,R"],[297,"KeyType,ValueType"],[298,"U,T"],[299,"U"],[300,""]]}],["rart",{"t":"EEEREKENMNMNMMCMCCCMNMCCFNNNNNNNNNKTRCMMMMMMMMCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKCMNNNMMMMMMMMNMCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFFKNNNNNNONNNNMNNOOOOOOOONNNNNNOFNNNNNNNNNNNNNNNNN","n":["AdaptiveRadixTree","ArrayKey","KeyTrait","NodeType","Partial","TreeTrait","VectorKey","get","get_k","get_mut","get_mut_k","insert","insert_k","is_empty","iter","","keys","partials","range","","remove","remove_k","stats","tree","Iter","borrow","borrow_mut","from","into","into_iter","next","try_from","try_into","type_id","KeyTrait","MAXIMUM_SIZE","PartialType","array_key","at","extend_from_partial","length_at","matches_slice","new_from_partial","new_from_slice","to_partial","truncate","vector_key","ArrayKey","as_array","as_ref","as_slice","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","eq","extend_from_partial","fmt","from","","","","","","","","","","","","","","","","","","","","","","","","","","","into","length_at","matches_slice","new_from_array","new_from_partial","new_from_slice","new_from_str","new_from_string","partial_cmp","to_be_u64","to_owned","to_partial","truncate","try_from","try_into","type_id","VectorKey","as_ref","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","eq","extend_from_partial","from","","","","","","","","","","","","","","","","","","","","","","","","","","","into","length_at","matches_slice","new_from_partial","new_from_slice","new_from_str","new_from_string","new_from_vec","partial_cmp","to_be_u64","to_owned","to_partial","truncate","try_from","try_into","type_id","Partial","array_partial","at","ends_with","is_empty","iter","len","partial_after","partial_before","partial_extended_with","partial_from","prefix_length_common","prefix_length_key","prefix_length_slice","starts_with","to_slice","vector_partial","ArrPartial","as_ref","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","","","from_slice","index","into","into_iter","key","len","partial_after","partial_before","partial_extended_with","partial_from","prefix_length_common","prefix_length_key","prefix_length_slice","to_owned","to_slice","","try_from","try_into","type_id","VectorPartial","as_ref","at","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","","","from_slice","into","key","len","partial_after","partial_before","partial_extended_with","partial_from","prefix_length_common","prefix_length_key","prefix_length_slice","to_owned","to_slice","","try_from","try_into","type_id","Range","borrow","borrow_mut","empty","for_iter","for_iter_with_bounds","for_iter_with_first","from","into","into_iter","next","try_from","try_into","type_id","NodeStats","TreeStats","TreeStatsTrait","borrow","","borrow_mut","","default","","density","fmt","","from","","get_tree_stats","into","","max_height","node_stats","num_inner_nodes","num_leaves","num_values","total_children","total_density","total_nodes","try_from","","try_into","","type_id","","width","AdaptiveRadixTree","borrow","borrow_mut","default","from","get_k","get_mut_k","get_tree_stats","insert_k","into","is_empty","iter","new","range","remove_k","try_from","try_into","type_id"],"q":[[0,"rart"],[24,"rart::iter"],[34,"rart::keys"],[47,"rart::keys::array_key"],[104,"rart::keys::vector_key"],[158,"rart::partials"],[175,"rart::partials::array_partial"],[207,"rart::partials::vector_partial"],[237,"rart::range"],[251,"rart::stats"],[283,"rart::tree"],[301,"core::option"],[302,"core::convert"],[303,"core::ops::range"],[304,"core::result"],[305,"core::any"],[306,"core::clone"],[307,"core::cmp"],[308,"core::fmt"],[309,"alloc::string"],[310,"alloc::vec"],[311,"core::slice::iter"],[312,"std::collections::hash::map"]],"i":"```d```0000000`0```000```Ab00000000`j0`00000000``Bl0000000000000000000000000000000000000000000000000000000`Eb0000000000000000000000000000000000000000000000000000``Ah0000000000000``E`000000000000000000000000000000`Ef0000000000000000000000000000`Ad000000000000```EnF`101011010Fd21111112122121212`Fh0000000000000000","f":"```````{{{f{{d{}{{b{c}}}}}}g}{{h{{f{i}}}}}{}j{{l{e}}}{}}{{{f{{d{}{{b{c}}}}}}{f{e}}}{{h{{f{g}}}}}{}j{}}{{{f{n{d{}{{b{c}}}}}}g}{{h{{f{ni}}}}}{}j{{l{e}}}{}}{{{f{n{d{}{{b{c}}}}}}{f{e}}}{{h{{f{ng}}}}}{}j{}}{{{f{n{d{}{{b{c}}}}}}gi}{{h{i}}}{}j{{l{e}}}{}}{{{f{n{d{}{{b{c}}}}}}{f{e}}g}{{h{g}}}{}j{}}{{{f{{d{}{{b{c}}}}}}}A`{}}`{{{f{{d{}{{b{c}}}}}}}{{Ab{eg}}}{}j{}}```{{{f{{d{}{{b{c}}}}}}g}{{Ad{ei}}}{}j{{Af{e}}}{}}{{{f{n{d{}{{b{c}}}}}}g}{{h{i}}}{}j{{l{e}}}{}}{{{f{n{d{}{{b{c}}}}}}{f{e}}}{{h{g}}}{}j{}}```{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{cc{}}{{}c{}}{{}c{}}{{{f{n{Ab{ecg}}}}}{{h{i}}}Ah{{j{}{{Aj{c}}}}}{}{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}````{{{f{{j{}{{Aj{c}}}}}}B`}Bb{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}{f{c}}}{{j{}{{Aj{c}}}}}{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}B`}B`{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}{f{{Bj{Bb}}}}}A`{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{c}}}{{j{}{{Aj{c}}}}}{AhBdBfBh}}{{{f{{Bj{Bb}}}}}{{j{}{{Aj{c}}}}}{AhBdBfBh}}{{{f{{j{}{{Aj{c}}}}}}B`}c{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}{{{f{{j{}{{Aj{c}}}}}}B`}{{j{}{{Aj{c}}}}}{Ah{Bd{{j{}{{Aj{c}}}}}}BfBh}}``{{{f{Bl}}}{{f{{Bn{Bb}}}}}}{{{f{Bl}}}{{f{{Bj{Bb}}}}}}0{{{f{Bl}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{Bl}}}Bl}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{Bl}}{f{Bl}}}Cb}{{{f{Bl}}{f{Bl}}}A`}{{{f{Bl}}{f{c}}}Bl{}}{{{f{Bl}}{f{nCd}}}Cf}{ChBl}{{{f{B`}}}Bl}{CjBl}{{{f{Cl}}}Bl}{ClBl}{{{f{Cn}}}Bl}{{{f{Cj}}}Bl}{CnBl}{{{f{Ch}}}Bl}{{{f{D`}}}Bl}{D`Bl}{{{f{Db}}}Bl}{cc{}}{DbBl}{{{f{Dd}}}Bl}{DfBl}{{{f{Dh}}}Bl}{BbBl}{{{f{Bb}}}Bl}{DjBl}{{{f{Dj}}}Bl}{DhBl}{{{f{Dl}}}Bl}{DnBl}{{{f{Dn}}}Bl}{B`Bl}{DlBl}{{}c{}}{{{f{Bl}}B`}B`}{{{f{Bl}}{f{{Bj{Bb}}}}}A`}{{{Bn{Bb}}}Bl}{{{f{c}}}Bl{}}{{{f{{Bj{Bb}}}}}Bl}{{{f{Dd}}}Bl}{{{f{Cj}}}Bl}{{{f{Bl}}{f{Bl}}}{{h{Cb}}}}{{{f{Bl}}}Dn}{fc{}}{{{f{Bl}}B`}E`}{{{f{Bl}}B`}Bl}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{{{f{Eb}}}{{f{{Bj{Bb}}}}}}{{{f{Eb}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{Eb}}}Eb}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{Eb}}{f{Eb}}}Cb}{{{f{Eb}}{f{Eb}}}A`}{{{f{Eb}}{f{c}}}Eb{}}{{{f{Bb}}}Eb}{{{f{Ch}}}Eb}{D`Eb}{cc{}}{{{f{D`}}}Eb}{CjEb}{{{f{Cj}}}Eb}{{{f{Dd}}}Eb}{{{f{B`}}}Eb}{BbEb}{DhEb}{DjEb}{{{f{Dj}}}Eb}{{{f{Db}}}Eb}{ChEb}{{{f{Dh}}}Eb}{DfEb}{DbEb}{{{f{Dl}}}Eb}{DnEb}{{{f{Dn}}}Eb}{B`Eb}{{{f{Cl}}}Eb}{ClEb}{{{f{Cn}}}Eb}{CnEb}{DlEb}{{}c{}}{{{f{Eb}}B`}B`}{{{f{Eb}}{f{{Bj{Bb}}}}}A`}{{{f{c}}}Eb{}}{{{f{{Bj{Bb}}}}}Eb}{{{f{Dd}}}Eb}{{{f{Cj}}}Eb}{{{Ed{Bb}}}Eb}{{{f{Eb}}{f{Eb}}}{{h{Cb}}}}{{{f{Eb}}}Dn}{fc{}}{{{f{Eb}}B`}Ef}{{{f{Eb}}B`}Eb}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}``{{{f{Ah}}B`}Bb}{{{f{Ah}}{f{{Bj{Bb}}}}}A`}{{{f{Ah}}}A`}{{{f{Ah}}}{{Eh{Bb}}}}{{{f{Ah}}}B`}{{{f{Ah}}B`}Ah}0{{{f{Ah}}{f{Ah}}}Ah}{{{f{Ah}}B`B`}Ah}{{{f{Ah}}{f{Ah}}}B`}{{{f{Ah}}{f{c}}B`}B`{{j{}{{Aj{Ah}}}}}}{{{f{Ah}}{f{{Bj{Bb}}}}}B`}9{{{f{Ah}}}{{f{{Bj{Bb}}}}}}``{{{f{E`}}}{{f{{Bj{Bb}}}}}}{{{f{E`}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{E`}}}E`}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{E`}}{f{E`}}}A`}{{{f{E`}}{f{nCd}}}Cf}{{{f{{Bj{Bb}}}}}E`}{BlE`}{cc{}}2{{{f{E`}}B`}{{f{c}}}{}}{{}c{}}{{{f{E`}}}c{}}5{{{f{E`}}}B`}{{{f{E`}}B`}E`}0{{{f{E`}}{f{E`}}}E`}{{{f{E`}}B`B`}E`}{{{f{E`}}{f{E`}}}B`}{{{f{E`}}{f{c}}B`}B`{{j{}{{Aj{E`}}}}}}{{{f{E`}}{f{{Bj{Bb}}}}}B`}{fc{}}{{{f{E`}}}{{f{{Bj{Bb}}}}}}0{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{{{f{Ef}}}{{f{{Bj{Bb}}}}}}{{{f{Ef}}B`}Bb}{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{{f{Ef}}}Ef}{{f{f{nc}}}C`{}}{{fBb}C`}{{{f{Ef}}{f{Ef}}}A`}{{{f{Ef}}{f{nCd}}}Cf}{{{f{{Bj{Bb}}}}}Ef}{cc{}}{EbEf}2{{}c{}}3{{{f{Ef}}}B`}{{{f{Ef}}B`}Ef}0{{{f{Ef}}{f{Ef}}}Ef}{{{f{Ef}}B`B`}Ef}{{{f{Ef}}{f{Ef}}}B`}{{{f{Ef}}{f{c}}B`}B`{{j{}{{Aj{Ef}}}}}}{{{f{Ef}}{f{{Bj{Bb}}}}}B`}{fc{}}{{{f{Ef}}}{{f{{Bj{Bb}}}}}}0{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}`{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{}{{Ad{ce}}}j{}}{{{Ab{ce}}{Ej{c}}}{{Ad{ce}}}j{}}{{{Ab{ce}}{Ej{c}}{Ej{c}}}{{Ad{ce}}}j{}}{{{El{c{f{e}}}}{Ab{ce}}{Ej{c}}}{{Ad{ce}}}j{}}{cc{}}{{}c{}}{{}c{}}{{{f{n{Ad{eg}}}}}{{h{{El{e{f{g}}}}}}}Ah{{j{}{{Aj{c}}}}}{}}<;:```9988{{}En}{{}F`}{EnFb}{{{f{En}}{f{nCd}}}Cf}{{{f{F`}}{f{nCd}}}Cf}88{{{f{Fd}}}F`}88{F`B`}{F`Ff}111{EnB`}{F`Fb}1{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fAn}04`{f{{f{c}}}{}}{{{f{n}}}{{f{nc}}}{}}{{}{{Fh{ce}}}j{}}{cc{}}{{{f{{Fh{ce}}}}{f{c}}}{{h{{f{e}}}}}j{}}{{{f{n{Fh{ce}}}}{f{c}}}{{h{{f{ne}}}}}j{}}{{{f{{Fh{ce}}}}}F`j{}}{{{f{n{Fh{ce}}}}{f{c}}e}{{h{e}}}j{}}{{}c{}}{{{f{{Fh{ce}}}}}A`j{}}{{{f{{Fh{ce}}}}}{{Ab{ce}}}j{}}8{{{f{{Fh{ce}}}}g}{{Ad{ce}}}j{}{{Af{c}}}}{{{f{n{Fh{ce}}}}{f{c}}}{{h{e}}}j{}}?>=","D":"Hj","p":[[17,"NodeType"],[10,"TreeTrait",0],[1,"reference",null,null,1],[6,"Option",301,null,1],[10,"KeyTrait",34],[10,"Into",302,null,1],[0,"mut"],[1,"bool"],[5,"Iter",24],[5,"Range",237],[10,"RangeBounds",303],[10,"Partial",158],[17,"PartialType"],[6,"Result",304,null,1],[5,"TypeId",305],[1,"usize"],[1,"u8"],[10,"From",302,null,1],[10,"Clone",306],[10,"PartialEq",307],[1,"slice"],[5,"ArrayKey",47],[1,"array"],[1,"unit"],[6,"Ordering",307],[5,"Formatter",308],[8,"Result",308],[1,"i64"],[5,"String",309],[1,"isize"],[1,"i128"],[1,"i32"],[1,"i16"],[1,"str"],[1,"i8"],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[5,"ArrPartial",175],[5,"VectorKey",104],[5,"Vec",310],[5,"VectorPartial",207],[5,"Iter",311],[6,"Bound",303],[1,"tuple",null,null,1],[5,"NodeStats",251],[5,"TreeStats",251],[1,"f64"],[10,"TreeStatsTrait",251],[5,"HashMap",312],[5,"AdaptiveRadixTree",283]],"r":[[0,283],[1,47],[2,34],[4,158],[6,104]],"b":[[61,"impl-From%3Ci64%3E-for-ArrayKey%3CN%3E"],[62,"impl-From%3C%26usize%3E-for-ArrayKey%3CN%3E"],[63,"impl-From%3CString%3E-for-ArrayKey%3CN%3E"],[64,"impl-From%3C%26isize%3E-for-ArrayKey%3CN%3E"],[65,"impl-From%3Cisize%3E-for-ArrayKey%3CN%3E"],[66,"impl-From%3C%26i128%3E-for-ArrayKey%3CN%3E"],[67,"impl-From%3C%26String%3E-for-ArrayKey%3CN%3E"],[68,"impl-From%3Ci128%3E-for-ArrayKey%3CN%3E"],[69,"impl-From%3C%26i64%3E-for-ArrayKey%3CN%3E"],[70,"impl-From%3C%26i32%3E-for-ArrayKey%3CN%3E"],[71,"impl-From%3Ci32%3E-for-ArrayKey%3CN%3E"],[72,"impl-From%3C%26i16%3E-for-ArrayKey%3CN%3E"],[74,"impl-From%3Ci16%3E-for-ArrayKey%3CN%3E"],[75,"impl-From%3C%26str%3E-for-ArrayKey%3CN%3E"],[76,"impl-From%3Ci8%3E-for-ArrayKey%3CN%3E"],[77,"impl-From%3C%26u128%3E-for-ArrayKey%3CN%3E"],[78,"impl-From%3Cu8%3E-for-ArrayKey%3CN%3E"],[79,"impl-From%3C%26u8%3E-for-ArrayKey%3CN%3E"],[80,"impl-From%3Cu16%3E-for-ArrayKey%3CN%3E"],[81,"impl-From%3C%26u16%3E-for-ArrayKey%3CN%3E"],[82,"impl-From%3Cu128%3E-for-ArrayKey%3CN%3E"],[83,"impl-From%3C%26u32%3E-for-ArrayKey%3CN%3E"],[84,"impl-From%3Cu64%3E-for-ArrayKey%3CN%3E"],[85,"impl-From%3C%26u64%3E-for-ArrayKey%3CN%3E"],[86,"impl-From%3Cusize%3E-for-ArrayKey%3CN%3E"],[87,"impl-From%3Cu32%3E-for-ArrayKey%3CN%3E"],[115,"impl-From%3C%26u8%3E-for-VectorKey"],[116,"impl-From%3C%26i64%3E-for-VectorKey"],[117,"impl-From%3Ci32%3E-for-VectorKey"],[119,"impl-From%3C%26i32%3E-for-VectorKey"],[120,"impl-From%3CString%3E-for-VectorKey"],[121,"impl-From%3C%26String%3E-for-VectorKey"],[122,"impl-From%3C%26str%3E-for-VectorKey"],[123,"impl-From%3C%26usize%3E-for-VectorKey"],[124,"impl-From%3Cu8%3E-for-VectorKey"],[125,"impl-From%3Cu128%3E-for-VectorKey"],[126,"impl-From%3Cu16%3E-for-VectorKey"],[127,"impl-From%3C%26u16%3E-for-VectorKey"],[128,"impl-From%3C%26i16%3E-for-VectorKey"],[129,"impl-From%3Ci64%3E-for-VectorKey"],[130,"impl-From%3C%26u128%3E-for-VectorKey"],[131,"impl-From%3Ci8%3E-for-VectorKey"],[132,"impl-From%3Ci16%3E-for-VectorKey"],[133,"impl-From%3C%26u32%3E-for-VectorKey"],[134,"impl-From%3Cu64%3E-for-VectorKey"],[135,"impl-From%3C%26u64%3E-for-VectorKey"],[136,"impl-From%3Cusize%3E-for-VectorKey"],[137,"impl-From%3C%26isize%3E-for-VectorKey"],[138,"impl-From%3Cisize%3E-for-VectorKey"],[139,"impl-From%3C%26i128%3E-for-VectorKey"],[140,"impl-From%3Ci128%3E-for-VectorKey"],[141,"impl-From%3Cu32%3E-for-VectorKey"],[185,"impl-From%3C%26%5Bu8%5D%3E-for-ArrPartial%3CSIZE%3E"],[186,"impl-From%3CArrayKey%3CSIZE%3E%3E-for-ArrPartial%3CSIZE%3E"],[202,"impl-ArrPartial%3CSIZE%3E"],[203,"impl-Partial-for-ArrPartial%3CSIZE%3E"],[217,"impl-From%3C%26%5Bu8%5D%3E-for-VectorPartial"],[219,"impl-From%3CVectorKey%3E-for-VectorPartial"],[232,"impl-Partial-for-VectorPartial"],[233,"impl-VectorPartial"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOgAGgABAAIABQAAAAcAAAAaAAEAHgAEACYAAAAvAAAAMQAYAEsADQBaAAcAYwAFAGoADAB4ABYAkAAQAK8ADAC9AAEAwAAaANwAAQDfAA4A7wAFAPcAEAAKAQAADQEOAB0BAgAhAQMAJgEHAA==","P":[[7,"TreeTrait::NodeType,KeyType,Key,ValueType"],[8,"TreeTrait::NodeType,KeyType,ValueType"],[9,"TreeTrait::NodeType,KeyType,Key,ValueType"],[10,"TreeTrait::NodeType,KeyType,ValueType"],[11,"TreeTrait::NodeType,KeyType,KV,ValueType"],[12,"TreeTrait::NodeType,KeyType,ValueType"],[13,"TreeTrait::NodeType"],[15,"TreeTrait::NodeType,KeyType,ValueType"],[19,"TreeTrait::NodeType,KeyType,R,ValueType"],[20,"TreeTrait::NodeType,KeyType,KV,ValueType"],[21,"TreeTrait::NodeType,KeyType,ValueType"],[25,"T"],[28,"U"],[29,"I"],[30,"P,K,V,Iterator::Item"],[31,"U,T"],[32,"U"],[33,""],[38,"KeyTrait::PartialType"],[48,""],[52,"T"],[54,""],[55,"T"],[56,""],[59,"KeyTrait::PartialType"],[60,""],[73,"T"],[74,""],[88,"U"],[89,""],[92,"KeyTrait::PartialType"],[93,""],[98,"T"],[99,""],[101,"U,T"],[102,"U"],[103,""],[107,"T"],[109,""],[110,"T"],[111,""],[114,"KeyTrait::PartialType"],[115,""],[118,"T"],[119,""],[142,"U"],[143,""],[145,"KeyTrait::PartialType"],[146,""],[152,"T"],[153,""],[155,"U,T"],[156,"U"],[157,""],[170,"K"],[171,""],[178,"T"],[180,""],[181,"T"],[182,""],[187,"T"],[188,""],[189,"Index::Output"],[190,"U"],[191,"IntoIterator::IntoIter"],[192,""],[199,"K"],[200,""],[201,"T"],[202,""],[204,"U,T"],[205,"U"],[206,""],[210,"T"],[212,""],[213,"T"],[214,""],[218,"T"],[219,""],[221,"U"],[222,""],[229,"K"],[230,""],[231,"T"],[232,""],[234,"U,T"],[235,"U"],[236,""],[238,"T"],[240,"K,V"],[244,"T"],[245,"U"],[246,"I"],[247,"P,K,V"],[248,"U,T"],[249,"U"],[250,""],[254,"T"],[258,""],[263,"T"],[265,""],[266,"U"],[268,""],[276,"U,T"],[278,"U"],[280,""],[284,"T"],[286,"KeyType,ValueType"],[287,"T"],[288,"KeyType,ValueType"],[292,"U"],[293,"KeyType,ValueType"],[296,"KeyType,ValueType,R"],[297,"KeyType,ValueType"],[298,"U,T"],[299,"U"],[300,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[14019,14068]}